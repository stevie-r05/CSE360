/*
* DBCourses.cpp
*
*  Created on: Mar 1, 2012
*      Author: Ian
*/
#include "stdafx.h"
#include "DB_Courses.h"
#include "timingClass.h"

namespace CSE360Project {

	DB_Courses::DB_Courses() {
		database_file = "Courses.db";
		database_info_file = database_file+".info";

		//Load Data
		this->LoadData<db_course_data>(course_data);
	}

	void DB_Courses::ReloadData() {
		this->LoadData<db_course_data>(course_data);
	}

	void DB_Courses::Delete(int cid) {
		int vector_index = getVectorIndex(cid);

		if (vector_index >= 0)
			course_data.erase(course_data.begin()+vector_index);

		this->Write();
	}

	void DB_Courses::DeleteUser(int uid) {
		for (int i = 0; i < (int) course_data.size(); i++) {
			if (course_data[i].uid == uid) {
				course_data.erase(course_data.begin()+i);
			}
		}

		this->Write();
	}

	int DB_Courses::Insert(db_course_data *course_data) {
		//Auto-assign UID
		course_data->cid = ++lastID;

		this->course_data.push_back(*course_data);

		//Parameter lets the writ method know this is insertion.
		this->Write();
		
		return lastID;
	}

	vector<db_course_data> DB_Courses::getTaughtCourses(int uid) {
		vector<db_course_data> packaged_data;

		for (int i = 0; i < (int) course_data.size(); i++) {
			if (course_data[i].uid == uid) {
				packaged_data.push_back(course_data[i]);
			}
		}

		return packaged_data;
	}

	vector<db_course_data> DB_Courses::getAllCourseData() {
		return course_data;
	}
	
	string DB_Courses::getCourseName(int cid) {
		int vector_index = getVectorIndex(cid);

		if (vector_index >= 0)
			return course_data[vector_index].courseName;

		return "Invalid Course ID";
	}

	int DB_Courses::getVectorIndex(int cid) {
		for (int i = 0; i < (int) course_data.size(); i++) {
			if (cid == course_data[i].cid) {
				return i;
			}
		}

		//Vector index of < 0 indicates failure to locate record.
		return -1;
	}

	void DB_Courses::outputAllData() {
		if (!course_data.empty()) {
			for (int i = 0; i < (int) course_data.size(); i++) {
				cout << i+1 << ") ";
				cout << "cid: " << course_data[i].cid << endl; //Course ID - Autogenerated in this class.
				cout << "uid: " << course_data[i].uid << endl;
				cout << "course name: " << course_data[i].courseName << endl;
				cout << endl << endl;
			}
		} else {
			cout << "Course Data is empty." << endl;
		}
	}

	void DB_Courses::ClearData() {
		course_data.clear();
	}

	void DB_Courses::Write() {
		this->WriteData<db_course_data>(course_data);	
	}

	DB_Courses::~DB_Courses() {
		this->ClearData();
	}
} /* namespace CSE360Project */