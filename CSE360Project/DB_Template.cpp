/*
* DBCourses.cpp
*
*  Created on: Mar 1, 2012
*      Author: Ian
*/
#include "stdafx.h"
#include "DB_Template.h"
#include "timingClass.h"

namespace CSE360Project {

	DB_Template::DB_Template() {
		database_file = "Template.db";
		database_info_file = database_file+".info";

		//Load Data
		this->LoadData<DB_TEMPLATE_DATA>(template_data);
	}

	void DB_Template::Delete(int SOME_ID) {
		int vector_index = getVectorIndex(cid);

		if (vector_index >= 0)
			template_data.erase(template_data.begin()+vector_index);

		this->Write();
	}

	int DB_Template::Insert(DB_TEMPLATE_DATA *template_data) {
		//Auto-assign UID
		template_data->cid = ++lastID;

		this->template_data.push_back(*template_data);

		//Parameter lets the writ method know this is insertion.
		this->Write();

		return 0;
	}

	vector<db_course_data> DB_Template::getTemplateData(int some_id) {
		//TODO:  Filter by some_id.
		return template_data;
	}

	void DB_Template::outputAllData() {
		if (!template_data.empty()) {
			for (int i = 0; i < (int) template_data.size(); i++) {
				cout << i+1 << ") ";
				cout << "cid: " << template_data[i].cid << endl; //Course ID - Autogenerated in this class.
				cout << "uid: " << template_data[i].uid << endl;
				cout << "course name: " << template_data[i].courseName << endl;
				cout << endl << endl;
			}
		} else {
			cout << "Course Data is empty." << endl;
		}
	}

	int DB_Template::getVectorIndex(int cid) {
		for (int i = 0; i < (int) template_data.size(); i++) {
			if (cid == template_data[i].cid) {
				return i;
			}
		}

		//Vector index of < 0 indicates failure to locate record.
		return -1;
	}

	void DB_Template::Write() {
		this->WriteData<DB_TEMPLATE_DATA>(template_data);	
	}

	void DB_Template::ClearData() {
		template_data.clear();
	}

	DB_Template::~DB_Template() {
		this->ClearData();
	}
} /* namespace CSE360Project */